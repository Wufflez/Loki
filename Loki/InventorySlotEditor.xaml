<UserControl x:Class="Loki.InventorySlotEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:loki="clr-namespace:Loki"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance loki:InventorySlot}"
             d:DesignHeight="100" d:DesignWidth="100">
    <UserControl.Resources>
        <loki:BoolToVisibilityConverter x:Key="BoolToVis" />
        <loki:BoolToVisibilityConverter x:Key="InvertedBoolToVis" True="Hidden" False="Visible" />
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#609C6B"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#3A3A3A"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style x:Key="RoundedProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="4" Padding="1.5">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3"/>
                                    <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="HiddenTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#7000"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#7000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CoolButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <!-- This is a cool template we should probably move it to be some shared resource to use elsewhere -->
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="MrBorder" Background="{TemplateBinding Background}" CornerRadius="4" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="BorderScale"/>
                                </Border.RenderTransform>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.25">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <QuadraticEase/>
                                                </VisualTransition.GeneratedEasingFunction>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MrBorder" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Normal"/>
                                        <VisualState Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MrBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.2" Duration="0"/>
                                                <DoubleAnimation Storyboard.TargetName="MrBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.2" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter Margin="4"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="LittleSquareCoolButton" BasedOn="{StaticResource CoolButton}" TargetType="Button">
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>
    </UserControl.Resources>


    <Border CornerRadius="4" x:Name="LayoutRoot" AllowDrop="True" Drop="BorderDrop" MouseMove="BorderMouseMove">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="DarkGray"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                        <Setter Property="Background" Value="Gray"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Item.Equiped}" Value="True">
                        <Setter Property="Background" Value="#FF7D8989"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Viewbox>
            <Grid Width="128" Height="128">
                <!-- Quick slot number in the top left -->
                <TextBlock Margin="6,0"
                           FontWeight="Bold" FontSize="26"
                           Foreground="#0D5994"
                           Text="{Binding QuickSlotNumber, FallbackValue='X'}"
                           HorizontalAlignment="Left" VerticalAlignment="Top" />

                <!-- EMPTY indicator -->
                <TextBlock
                    VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="DemiBold"
                    Foreground="White" Opacity="0.25"
                    Visibility="{Binding IsEmpty, Converter={StaticResource BoolToVis}}">
                    EMPTY
                </TextBlock>

                <!-- Non empty stuff -->
                <Grid Visibility="{Binding IsEmpty, Converter={StaticResource InvertedBoolToVis}}">
                    
                    <!-- Quality number in the top right -->
                    <TextBlock Margin="6,0"
                               Visibility="{Binding Item.HasQualityLevels, Converter={StaticResource BoolToVis}}"
                               FontWeight="Bold" FontSize="26"
                               Foreground="#DC871B"
                               Text="{Binding Item.Quality, FallbackValue='X'}"
                               HorizontalAlignment="Right" VerticalAlignment="Top" />

                    <!-- Durability -->
                    <ProgressBar Style="{DynamicResource RoundedProgressBar}" Minimum="0" Maximum="{Binding Item.MaxDurability}" 
                                 Value="{Binding Item.Durability, Mode=OneWay}"
                                 Visibility="{Binding Item.SharedData.UsesDurability, Converter={StaticResource BoolToVis}}"
                                 Width="110" Margin="8" Height="8"
                                 VerticalAlignment="Bottom" HorizontalAlignment="Center" />

                    <!-- Item name -->
                    <Border>
                        <Border.CacheMode>
                            <BitmapCache RenderAtScale="2"/>
                        </Border.CacheMode>
                        <Grid>
                            <Grid.Effect>
                                <DropShadowEffect ShadowDepth="0" />
                            </Grid.Effect>
                            <Image Source="{Binding Item.SharedData.Thumbnail}" Width="48" Height="48" Margin="5"  VerticalAlignment="Top"></Image>
                            <TextBlock
                                TextWrapping="Wrap" TextAlignment="Center"
                                FontSize="18" FontWeight="DemiBold" Foreground="White"
                                Text="{Binding Item.SharedData.DisplayName, FallbackValue='item_name'}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                            <!-- Item stack count / edit -->
                            <StackPanel Orientation="Horizontal" Margin="2"
                                        Visibility="{Binding Item.CanStack, Converter={StaticResource BoolToVis}}"
                                        VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                <TextBox 
                                    Style="{StaticResource HiddenTextBox}"
                                    PreviewMouseLeftButtonDown="StackEditPreviewMouseDown"
                                    KeyUp="StackEditKeyUp"
                                    FontSize="14" FontWeight="DemiBold" Foreground="White" 
                                    ToolTip="Edit the stack size"
                                    VerticalAlignment="Center" Text="{Binding Item.Stack}"/>
                                <TextBlock
                                    FontSize="14" FontWeight="DemiBold" Foreground="White"
                                    VerticalAlignment="Center" Text="{Binding Item.SharedData.MaxStack, StringFormat=' / {0}', FallbackValue=' / MAX'}"/>
                                <Button Padding="0" Cursor="Hand" Margin="4,0,0,0" Height="16" Width="16"
                                    ToolTip="Fill up to maximum stack size"
                                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                    Command="{Binding FillStack}" 
                                    Style="{StaticResource LittleSquareCoolButton}">
                                    <Path Data="M 50,5 95,97.5 5,97.5 z" Stroke="Green" Stretch="Fill"
                                      StrokeThickness="4" StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>

                    
                    <!-- Layer fade in/out with mouse over-->
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Setters>
                                    <Setter Property="Opacity" Value="0"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LayoutRoot, Path=IsMouseOver}"
                                                 Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1"
                                                                     Duration="0:0:0.5">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0"
                                                                     Duration="0:0:0.5">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <!-- Buttons in the top right -->
                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="6">
                            <!-- Delete button -->
                            <Button Padding="0" Cursor="Hand" 
                                    ToolTip="Delete"
                                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                    Command="{Binding DeleteItem}" 
                                    Style="{StaticResource LittleSquareCoolButton}">
                                <Path Data="M2,2 L10,10 M2,10 L10,2" Stroke="Red" Stretch="Fill"
                                      StrokeThickness="4" StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                            </Button>

                            <!-- Repair button -->
                            <Button Padding="0" Cursor="Hand" Margin="0,2,0,0"
                                    ToolTip="Repair"
                                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                    Command="{Binding RepairItem}" 
                                    Style="{StaticResource LittleSquareCoolButton}"
                                    Visibility="{Binding Item.SharedData.UsesDurability, Converter={StaticResource BoolToVis}}">
                                <Image Source="Resources/wrench-32.ico" />
                            </Button>

                            <!-- Quality button up -->
                            <Button Padding="0" Cursor="Hand" Margin="0,2,0,0"
                                    ToolTip="Quality up"
                                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                    Command="{Binding QualityUp}" 
                                    Style="{StaticResource LittleSquareCoolButton}"
                                    Visibility="{Binding Item.HasQualityLevels, Converter={StaticResource BoolToVis}}">
                                <Path Data="M 50,5 95,97.5 5,97.5 z" Stroke="Blue" Stretch="Fill"
                                      StrokeThickness="4" StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                            </Button>

                            <!-- Quality button down -->
                            <Button Padding="0" Cursor="Hand" Margin="0,2,0,0"
                                    ToolTip="Quality down"
                                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                    Command="{Binding QualityDown}" 
                                    Style="{StaticResource LittleSquareCoolButton}"
                                    Visibility="{Binding Item.HasQualityLevels, Converter={StaticResource BoolToVis}}">
                                <Path Data="M 50,97.5 95,5 5,5 z" Stroke="Blue" Stretch="Fill"
                                      StrokeThickness="4" StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                            </Button>
                        </StackPanel>
                        
                        <!-- Tag in top middle -->
                        <StackPanel>
                            <Image HorizontalAlignment="Center" VerticalAlignment="Top" Margin="6"
                               
                                   Source="Resources/tag-32.png" Width="24">
                                <Image.ToolTip>
                                    <StackPanel>
                                        <TextBlock Foreground="DarkRed" FontWeight="DemiBold" HorizontalAlignment="Center">Crafted By</TextBlock>
                                        <DockPanel>
                                            <Image 
                                                VerticalAlignment="Center"
                                                Width="16" Source="Resources/viking-24.png" DockPanel.Dock="Left" Margin="8"/>
                                            <StackPanel>
                                                <TextBlock FontSize="14" Text="{Binding Item.CrafterName}" />
                                                <TextBlock Text="{Binding Item.CrafterId, StringFormat='ID: {0}'}"
                                                           FontSize="8" Foreground="Gray"/>
                                            </StackPanel>
                                        </DockPanel>
                                    </StackPanel>
                                </Image.ToolTip>
                            </Image>
                            <!-- Toggle crafter button -->
                            <Button Padding="0" Cursor="Hand" Margin="0,2,0,0"
                                ToolTip="Toggle crafter"
                                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                Command="{Binding ToggleCrafter}" 
                                Style="{StaticResource LittleSquareCoolButton}">
                                <Image Source="Resources/tag-32.png" />
                            </Button>
                        </StackPanel>
                    </Grid>
                    
                    
                </Grid>

            </Grid>

           
        </Viewbox>

    </Border>
</UserControl>
